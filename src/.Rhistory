}
xpred <- seq(from=0, to=10, by=0.05)
fpred <- f_predict(xpred, xobs)
fpred$mean
plot(xpred, fpred$mean)
# Predicted values
f_predict <- function(x, xobs){
pred_mean <- kappa(x, xobs) %*% solve(kappa(xobs, xobs)) %*% xobs
pred_cov <- kappa(x, x) - kappa(x, xobs) %*% solve(kappa(xobs, xobs)) %*% kappa(xobs, x)
return(list(mean = pred_mean, covariance = pred_cov))
}
xpred <- seq(from=0, to=10, by=0.05)
fpred <- f_predict(xpred, xobs)
# Create multiple draws from posterior
draws <- NULL
for(i in 1:3){
draws[, i] <- rnorm(n=length(xpred), mean=fpred$mean, sd=sqrt(diag(fpred$covariance)))
}
sqrt(diag(fpred$covariance))
source('~/Dropbox/Documents/UBC/2019/1. Term 1/3. STAT 547C/gd-stat547c/src/Generate_figs.R', echo=TRUE)
ggplot() +
geom_line(data=observed, aes(x, y),
linetype = 2) +
geom_line(data=predicted, aes(x, y),
linetype = 1) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70")
ggplot() +
geom_line(data=observed, aes(x, y),
linetype = 2)
source('~/Dropbox/Documents/UBC/2019/1. Term 1/3. STAT 547C/gd-stat547c/src/Generate_figs.R', echo=TRUE)
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2)
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2) +
geom_point(data=observed, aes(x, y),
shape=4)
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2) +
geom_point(data=observed, aes(x, y),
shape=4,
size=2)
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2) +
geom_point(data=observed, aes(x, y),
shape=4,
size=4)
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2) +
geom_point(data=observed, aes(x, y),
shape=2,
size=4)
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2) +
geom_point(data=observed, aes(x, y),
shape=2,
size=4) +
geom_line(data=predicted, aes(x, y),
linetype = 1)
xobs
yobs
f_predict(4.7, sobx)
f_predict(4.7, xobs)
f_predict(8, xobs)
f_predict(c(4.7, 8), xobs)
source('~/Dropbox/Documents/UBC/2019/1. Term 1/3. STAT 547C/gd-stat547c/src/Generate_figs.R', echo=TRUE)
fpred <- f_predict(xpred, xobs, yobs)
predicted <- tibble(x = xpred,
y = fpred$mean,
ymin = y - 1.96*sqrt(diag(fpred$covariance)),
ymax = y + 1.96*sqrt(diag(fpred$covariance)))
head(fpred)
fpred <- f_predict(xpred, xobs, yobs)
plot(diag(fpred$covariance))
predicted <- tibble(x = xpred,
y = fpred$mean,
ymin = y - 1.96*sqrt(diag(fpred$covariance)),
ymax = y + 1.96*sqrt(diag(fpred$covariance)))
summary(diag(fpred$covariance))
summary(diag(fpred$mean))
# Prior/posterior 1 ####
x <- seq(from=0, to=10, by=0.05)
myfun <- function(x) exp(-3*x-1) - 2*log(1+4*(x/20)^2) + sin(1.1*x)
y <- myfun(x)
real <- tibble(x = x,
y = y)
ggplot(data.frame(x, y), aes(x, y))+
geom_line()
# Observed values
xobs <- runif(n=8, min=0, max=10)
yobs <- myfun(xobs)
observed <- tibble(x = xobs,
y = yobs)
# Covariance matrix
kappa <- function(x1, x2) {
n1 <- length(x1)
n2 <- length(x2)
K <- matrix(rep(0, n1*n2), nrow=n1)
for(i in 1:n1){
for(j in 1:n2){
K[i, j] <- exp(-0.5 * abs(x1[i] - x2[j])^2)
}
}
return(K)
}
# Predicted values
f_predict <- function(x, xobs, yobs){
pred_mean <- kappa(x, xobs) %*% solve(kappa(xobs, xobs)) %*% yobs
pred_cov <- kappa(x, x) - kappa(x, xobs) %*% solve(kappa(xobs, xobs)) %*% kappa(xobs, x)
return(list(mean = pred_mean, covariance = pred_cov))
}
xpred <- seq(from=0, to=10, by=0.05)
fpred <- f_predict(xpred, xobs, yobs)
plot(fpred$mean)
sqrt(diag(fpred$covariance))
predicted <- tibble(x = xpred,
y = fpred$mean,
ymin = y - 1.96*sqrt(diag(fpred$covariance)),
ymax = y + 1.96*sqrt(diag(fpred$covariance)))
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2) +
geom_point(data=observed, aes(x, y),
shape=2,
size=4) +
geom_line(data=predicted, aes(x, y),
linetype = 1) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70")
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2) +
geom_point(data=observed, aes(x, y),
shape=2,
size=4) +
geom_line(data=predicted, aes(x, y),
linetype = 1) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.1)
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2) +
geom_point(data=observed, aes(x, y),
shape=2,
size=4) +
geom_line(data=predicted, aes(x, y),
linetype = 1) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.25)
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2) +
geom_point(data=observed, aes(x, y),
shape=2,
size=4) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "royalblue",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.25)
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "royalblue",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.25)
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2,
size=2) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "royalblue",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.25)
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2,
size=1) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "royalblue",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.25)
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "royalblue",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.25)
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "royalblue",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.5)
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2,
size = 0.5) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "royalblue",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.5)
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2,
size = 0.75) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "royalblue",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.5)
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2,
size = 0.75) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "grey",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.5)
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2,
size = 0.75) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "grey20",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.5)
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2,
size = 0.75) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "grey20",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.5) +
labs(x = annotate(t))
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2,
size = 0.75) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "grey20",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.5) +
labs(x = expression(t))
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2,
size = 0.75) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "grey20",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.5) +
labs(x = expression(t),
y = expression(X_t))
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2,
size = 0.75) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "grey20",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.5) +
labs(x = expression(t),
y = expression(X[t]))
?ggsave
source('~/Dropbox/Documents/UBC/2019/1. Term 1/3. STAT 547C/gd-stat547c/src/Generate_figs.R', echo=TRUE)
# Prior/posterior 1 ####
x <- seq(from=0, to=10, by=0.05)
myfun <- function(x) exp(-3*x-1) - 2*log(1+4*(x/20)^2) + sin(1.1*x)
y <- myfun(x)
real <- tibble(x = x,
y = y)
ggplot(data.frame(x, y), aes(x, y))+
geom_line()
# Observed values
xobs <- seq(from=0, to=10, by=0.16)
yobs <- myfun(xobs)
observed <- tibble(x = xobs,
y = yobs)
# Covariance matrix
kappa <- function(x1, x2) {
n1 <- length(x1)
n2 <- length(x2)
K <- matrix(rep(0, n1*n2), nrow=n1)
for(i in 1:n1){
for(j in 1:n2){
K[i, j] <- exp(-0.5 * abs(x1[i] - x2[j])^2)
}
}
return(K)
}
# Predicted values
f_predict <- function(x, xobs, yobs){
pred_mean <- kappa(x, xobs) %*% solve(kappa(xobs, xobs)) %*% yobs
pred_cov <- kappa(x, x) - kappa(x, xobs) %*% solve(kappa(xobs, xobs)) %*% kappa(xobs, x)
return(list(mean = pred_mean, covariance = pred_cov))
}
xpred <- seq(from=0, to=10, by=0.05)
fpred <- f_predict(xpred, xobs, yobs)
predicted <- tibble(x = xpred,
y = fpred$mean,
ymin = y - 1.96*sqrt(diag(fpred$covariance)),
ymax = y + 1.96*sqrt(diag(fpred$covariance)))
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2,
size = 0.75) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "grey20",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.5) +
labs(x = expression(t),
y = expression(X[t]))
# Observed values
xobs <- seq(from=0, to=10, by=1.6)
# Observed values
xobs <- seq(from=0, to=10, by=1.4)
# Prior/posterior 1 ####
x <- seq(from=0, to=10, by=0.05)
myfun <- function(x) exp(-3*x-1) - 2*log(1+4*(x/20)^2) + sin(1.1*x)
y <- myfun(x)
real <- tibble(x = x,
y = y)
ggplot(data.frame(x, y), aes(x, y))+
geom_line()
# Observed values
xobs <- seq(from=0, to=10, by=1.4)
yobs <- myfun(xobs)
observed <- tibble(x = xobs,
y = yobs)
# Covariance matrix
kappa <- function(x1, x2) {
n1 <- length(x1)
n2 <- length(x2)
K <- matrix(rep(0, n1*n2), nrow=n1)
for(i in 1:n1){
for(j in 1:n2){
K[i, j] <- exp(-0.5 * abs(x1[i] - x2[j])^2)
}
}
return(K)
}
# Predicted values
f_predict <- function(x, xobs, yobs){
pred_mean <- kappa(x, xobs) %*% solve(kappa(xobs, xobs)) %*% yobs
pred_cov <- kappa(x, x) - kappa(x, xobs) %*% solve(kappa(xobs, xobs)) %*% kappa(xobs, x)
return(list(mean = pred_mean, covariance = pred_cov))
}
xpred <- seq(from=0, to=10, by=0.05)
fpred <- f_predict(xpred, xobs, yobs)
predicted <- tibble(x = xpred,
y = fpred$mean,
ymin = y - 1.96*sqrt(diag(fpred$covariance)),
ymax = y + 1.96*sqrt(diag(fpred$covariance)))
# Plot
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2,
size = 0.75) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "grey20",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.5) +
labs(x = expression(t),
y = expression(X[t]))
source('~/Dropbox/Documents/UBC/2019/1. Term 1/3. STAT 547C/gd-stat547c/src/Generate_figs.R', echo=TRUE)
ggplot() +
geom_line(data=real, aes(x, y),
linetype = 2,
size = 0.75) +
geom_point(data=observed, aes(x, y),
shape=2,
size=2) +
geom_line(data=predicted, aes(x, y),
linetype = 1,
color = "grey20",
alpha=0.75) +
geom_ribbon(data=predicted, aes(x = x, ymin=ymin, ymax=ymax),
fill="grey70",
alpha=0.5) +
labs(x = expression(t),
y = expression(X[t])) +
theme(axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12))
source('~/Dropbox/Documents/UBC/2019/1. Term 1/3. STAT 547C/gd-stat547c/src/Generate_figs.R', echo=TRUE)
source('~/Dropbox/Documents/UBC/2019/1. Term 1/3. STAT 547C/gd-stat547c/src/Generate_figs.R', echo=TRUE)
source('~/Dropbox/Documents/UBC/2019/1. Term 1/3. STAT 547C/gd-stat547c/src/Generate_figs.R', echo=TRUE)
source('~/Dropbox/Documents/UBC/2019/1. Term 1/3. STAT 547C/gd-stat547c/src/Generate_figs.R', echo=TRUE)
source('~/Dropbox/Documents/UBC/2019/1. Term 1/3. STAT 547C/gd-stat547c/src/Generate_figs.R', echo=TRUE)
source('~/Dropbox/Documents/UBC/2019/1. Term 1/3. STAT 547C/gd-stat547c/src/Generate_figs.R', echo=TRUE)
source('~/Dropbox/Documents/UBC/2019/1. Term 1/3. STAT 547C/gd-stat547c/src/Generate_figs.R', echo=TRUE)
